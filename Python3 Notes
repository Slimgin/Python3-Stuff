                                                                *   Notes for	*
                                                                *    Python3	*
                                                                *****************

Print now requires () - print(a)

For number iteration - a += 1 is shorthand for a + 1 = a

Make multiple assignments - a, b = 0, 1 - print(a, b) || print (a, b)

Import functions within .PY files - from {file} import {function} - No extension needed on file

enc_string - bytes
enc_string[0] - int
hex(enc_string[0]) - str
ord('a') - int
hex(ord('a')) - str

for byte in enc_string:
...     ord('a') ^ byte
122
86
86
82

Produces list of decimal(int) numbers.

for byte in enc_string:
...     list1.append(ord('a') ^ byte)

for item in list1:
    print(chr(item))

import string
>>> string.ascii_lowercase
'abcdefghijklmnopqrstuvwxyz'

list(string.ascii_lowercase)
['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

if 'a' in dict2['key']:                                                                                                                           
...     print("Success")                                                                                                                              
...                                                                                                                                                   
Success                                                                                                                                               
>>> if 'a' in dict2['key']:                                                                                                                           
...     dict2['value'] += 1                                                                                                                           
...                                                                                                                                                   
>>> dict2                                                                                                                                             
{'key': 'a', 'value': 2}

ASCII Characters to Decimal
Lowercase - 97 - 122
Uppercase - 65 - 90

# Numpy Notes

Convert number-string to a Numpy array

>>> strNum1
'1234567890'
>>> array1 = np.array([*strNum1], dtype=int)
>>> array1
array([1, 2, 3, 4, 5, 6, 7, 8, 9, 0])
>>> print(type(array1[0]))
<class 'numpy.int64'>

Import a flat file
np.loadtxt('filename', dtype=int, delimiter=' ')

array.diagonal() - accesses values in a diagonal line.

np.fill_diagonal - 

x = np.array([
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
])

diag = x.diagonal().copy()
diag += 10
np.fill_diagonal(x, diag)
print(x)

axis=0 is column based
axis=1 is row based

       axis-0
         v
array([[ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10], < axis-1
       [11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
       [21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
       [31, 32, 33, 34, 35, 36, 37, 38, 39, 40]])


Retrieve every diagonal value in an array:

offset = 0

for i in a:
    a.diagonal(offset=offset, axis1=0)
    offset += 1

Accessing items in a horizontal array:
    temp = array[row, start:stop]
    temp = array[0, 0:4] - stop is exclusive, so 0:4 is items 0, 1, 2, 3.

Accessing items in a vertical array:
    temp = array[start:stop, row]
    temp = array[0:4, 0] - stop is exclusive, so 0:4 is items 0, 1, 2, 3.